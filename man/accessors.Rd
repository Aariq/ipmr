% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-export.R
\name{domains}
\alias{domains}
\alias{domains.proto_ipm}
\alias{domains.default}
\alias{vital_rates}
\alias{vital_rates.proto_ipm}
\alias{vital_rates.default}
\alias{kernel_formulae}
\alias{kernel_formulae.proto_ipm}
\alias{kernel_formulae.default}
\alias{parameters}
\alias{parameters.proto_ipm}
\alias{parameters.default}
\alias{parameters<-}
\alias{parameters<-.proto_ipm}
\alias{parameters<-.default}
\alias{int_mesh}
\alias{pop_state}
\alias{pop_state.proto_ipm}
\alias{pop_state.default}
\title{Accessor functions for (proto_)ipm objects}
\usage{
domains(object)

\method{domains}{proto_ipm}(object)

\method{domains}{default}(object)

vital_rates(object)

\method{vital_rates}{proto_ipm}(object)

\method{vital_rates}{default}(object)

kernel_formulae(object)

\method{kernel_formulae}{proto_ipm}(object)

\method{kernel_formulae}{default}(object)

parameters(object)

\method{parameters}{proto_ipm}(object)

\method{parameters}{default}(object)

parameters(object) <- value

\method{parameters}{proto_ipm}(object) <- value

\method{parameters}{default}(object) <- value

int_mesh(ipm)

pop_state(object)

\method{pop_state}{proto_ipm}(object)

\method{pop_state}{default}(object)
}
\arguments{
\item{object}{A \code{proto_ipm} or object created by \code{make_ipm()}.}

\item{value}{A named list of new parameters. The new list does not need
to contain all of the parameters, just the ones to update/append.}

\item{ipm}{An object created by \code{make_ipm()}. This argument only applies
\code{int_mesh()} (because the mesh is not built until \code{make_ipm()} is
called).}
}
\value{
Depending on the class of \code{object}, a numeric vector, or a list
with types numeric or character. See details on return types for each.
}
\description{
Functions that access slots of a \code{*_ipm} (including \code{proto_ipm}).
}
\details{
The \code{*.default} method corresponds to output from \code{make_ipm()},
and the \code{*.proto_ipm} methods correspond to outputs from \code{define_*}.

Return types are as follows:
\itemize{
  \code{...}
}
}
