% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils-export.R
\name{define_pop_state}
\alias{define_pop_state}
\alias{define_state_vars}
\alias{define_env_state}
\alias{define_hier_effs}
\title{Helpers for IPM construction}
\usage{
define_pop_state(proto_ipm, ..., pop_vectors = list())

define_state_vars(proto_ipm, ...)

define_env_state(proto_ipm, ..., data_list)

define_hier_effs(proto_ipm, ...)
}
\arguments{
\item{proto_ipm}{The name of object you wish to append the new kernel to.}

\item{...}{Named expressions. See details for more information on their usage in
each \code{define_*} function.}

\item{data_list}{A list of named values that correspond to constants in the formula.
You do not need to specify vectors corresponding to the domains here.}

\item{kernels}{The kernel names you that correspond to given population state vector.
Suffix expansion is supported.}
}
\value{
All \code{define_*} functions return a proto_ipm.
}
\description{
Helpers for IPM construction
}
\details{
These are helper functions to define certain types of IPM classes. It is recommended
to use them within the IPM construction pipeline somewhere between \code{add_kernels}
and \code{make_ipm}. The order in which they are called does not matter provided
all values on the left hand side of the \code{...} appear in the right hand side
of another expression used elsewhere. Expressions where the left hand side does
not appear anywhere else will be ignored during construction, and so will not
be present in the returned \code{ipm} object.

Each \code{define_*} function takes dots in the same way: named expressions
are captured and evaluated later in the appropriate contexts with their respective
kernels. Suffix expansion is supported so that hierarchical models with
year/plot/what-have-you effects do not need to  be rewritten 10s or 100s of times.
}
